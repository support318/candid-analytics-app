version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: candid-analytics-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: candid_analytics
      POSTGRES_USER: candid_analytics_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U candid_analytics_user -d candid_analytics"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: candid-analytics-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # PHP API Backend
  api:
    image: php:8.1-apache
    container_name: candid-analytics-api
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:80"
    volumes:
      - ./api/public:/var/www/html
      - ./api/src:/var/www/src
      - ./api/vendor:/var/www/vendor
      - ./api/composer.json:/var/www/composer.json
      - ./api/.env:/var/www/.env
      - ./api/logs:/var/www/logs
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: candid_analytics
      DB_USER: candid_analytics_user
      DB_PASSWORD: ${DB_PASSWORD:-changeme123}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: 7d89e2c45095738f0b32b2761c98cce60028ec2f8e16f357717099454c0c3469fb65be356a98dd5f138a74b64800f1e53cb8297697b9cd19be032729e70f8caa
      FRONTEND_URL: https://candid-analytics-fky6y2vam-support-6191s-projects.vercel.app
      ALLOWED_ORIGINS: https://candid-analytics-fky6y2vam-support-6191s-projects.vercel.app,https://analytics.candidstudios.net,http://localhost:5173
      APP_ENV: production
      APP_DEBUG: false
    command: >
      bash -c "
      apt-get update && apt-get install -y libpq-dev git unzip &&
      docker-php-ext-install pdo pdo_pgsql &&
      (pecl install redis || true) && docker-php-ext-enable redis &&
      curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer &&
      cd /var/www &&
      if [ -f composer.json ]; then composer install --no-dev --optimize-autoloader; fi &&
      a2enmod rewrite &&
      echo '<Directory /var/www/html>' > /etc/apache2/conf-available/api.conf &&
      echo '  AllowOverride All' >> /etc/apache2/conf-available/api.conf &&
      echo '  Require all granted' >> /etc/apache2/conf-available/api.conf &&
      echo '</Directory>' >> /etc/apache2/conf-available/api.conf &&
      a2enconf api &&
      apache2-foreground
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  postgres_data:
  redis_data:
